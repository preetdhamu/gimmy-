import Flutter
import UIKit
import flutter_local_notifications

@main
@objc class AppDelegate: FlutterAppDelegate {
    // Define the secured text field
    private var secureTextField: UITextField = {
        let textField = UITextField()
        textField.isSecureTextEntry = true
        textField.translatesAutoresizingMaskIntoConstraints = false
        textField.isHidden = true // Hide the text field
        return textField
    }()
    
    override func application(
        _ application: UIApplication,
        didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
    ) -> Bool {
        // Setup for local notifications
        FlutterLocalNotificationsPlugin.setPluginRegistrantCallback { (registry) in
            GeneratedPluginRegistrant.register(with: registry)
        }
        GeneratedPluginRegistrant.register(with: self)

        // Set the notification center delegate
        if #available(iOS 10.0, *) {
            UNUserNotificationCenter.current().delegate = self
        }

        // Add the secured view
        addSecuredView()
        return super.application(application, didFinishLaunchingWithOptions: launchOptions)
    }
  
    override func applicationWillResignActive(_ application: UIApplication) {
        secureTextField.isSecureTextEntry = true // Mask sensitive information
    }

    override func applicationDidBecomeActive(_ application: UIApplication) {
        secureTextField.isSecureTextEntry = false // Unmask sensitive information
    }

    private func addSecuredView() {
        // Safely access the window
        guard let window = self.window else { return }
        
        // Add the secure text field if not already added
        if !window.subviews.contains(secureTextField) {
            window.addSubview(secureTextField)
            NSLayoutConstraint.activate([
                secureTextField.centerXAnchor.constraint(equalTo: window.centerXAnchor),
                secureTextField.centerYAnchor.constraint(equalTo: window.centerYAnchor),
                secureTextField.widthAnchor.constraint(equalToConstant: 1),
                secureTextField.heightAnchor.constraint(equalToConstant: 1)
            ])
        }
    }
}
